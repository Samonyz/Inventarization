<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="InventarizationDataSet" targetNamespace="http://tempuri.org/InventarizationDataSet.xsd" xmlns:mstns="http://tempuri.org/InventarizationDataSet.xsd" xmlns="http://tempuri.org/InventarizationDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="InventarizationConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="InventarizationConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Invent.Properties.Settings.GlobalReference.Default.InventarizationConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BuildingTableAdapter" GeneratorDataComponentClassName="BuildingTableAdapter" Name="Building" UserDataComponentName="BuildingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.Building" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Building] WHERE (([IDBuilding] = @Original_IDBuilding) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDBuilding" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDBuilding" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Building] ([Name]) VALUES (@Name);
SELECT IDBuilding, Name FROM Building WHERE (IDBuilding = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDBuilding, Name FROM dbo.Building</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Building] SET [Name] = @Name WHERE (([IDBuilding] = @Original_IDBuilding) AND ([Name] = @Original_Name));
SELECT IDBuilding, Name FROM Building WHERE (IDBuilding = @IDBuilding)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDBuilding" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDBuilding" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDBuilding" ColumnName="IDBuilding" DataSourceName="Inventarization.dbo.Building" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDBuilding" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDBuilding" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDBuilding" DataSetColumn="IDBuilding" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DefectiveListTableAdapter" GeneratorDataComponentClassName="DefectiveListTableAdapter" Name="DefectiveList" UserDataComponentName="DefectiveListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.DefectiveList" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DefectiveList] WHERE (([IDList] = @Original_IDList) AND ([DocDate] = @Original_DocDate) AND ([WorkerTableNum] = @Original_WorkerTableNum) AND ((@IsNull_WriteOffActIDWriteOffAct = 1 AND [WriteOffActIDWriteOffAct] IS NULL) OR ([WriteOffActIDWriteOffAct] = @Original_WriteOffActIDWriteOffAct)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDList" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDList" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DocDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DocDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerTableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerTableNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_WriteOffActIDWriteOffAct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffActIDWriteOffAct" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WriteOffActIDWriteOffAct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffActIDWriteOffAct" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DefectiveList] ([DocDate], [WorkerTableNum], [WriteOffActIDWriteOffAct]) VALUES (@DocDate, @WorkerTableNum, @WriteOffActIDWriteOffAct);
SELECT IDList, DocDate, WorkerTableNum, WriteOffActIDWriteOffAct FROM DefectiveList WHERE (IDList = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DocDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DocDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorkerTableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerTableNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WriteOffActIDWriteOffAct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffActIDWriteOffAct" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDList, DocDate, WorkerTableNum, WriteOffActIDWriteOffAct FROM dbo.DefectiveList</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DefectiveList] SET [DocDate] = @DocDate, [WorkerTableNum] = @WorkerTableNum, [WriteOffActIDWriteOffAct] = @WriteOffActIDWriteOffAct WHERE (([IDList] = @Original_IDList) AND ([DocDate] = @Original_DocDate) AND ([WorkerTableNum] = @Original_WorkerTableNum) AND ((@IsNull_WriteOffActIDWriteOffAct = 1 AND [WriteOffActIDWriteOffAct] IS NULL) OR ([WriteOffActIDWriteOffAct] = @Original_WriteOffActIDWriteOffAct)));
SELECT IDList, DocDate, WorkerTableNum, WriteOffActIDWriteOffAct FROM DefectiveList WHERE (IDList = @IDList)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DocDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DocDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorkerTableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerTableNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WriteOffActIDWriteOffAct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffActIDWriteOffAct" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDList" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDList" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DocDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DocDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerTableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerTableNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_WriteOffActIDWriteOffAct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffActIDWriteOffAct" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WriteOffActIDWriteOffAct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffActIDWriteOffAct" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDList" ColumnName="IDList" DataSourceName="Inventarization.dbo.DefectiveList" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDList" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDList" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDList" DataSetColumn="IDList" />
              <Mapping SourceColumn="DocDate" DataSetColumn="DocDate" />
              <Mapping SourceColumn="WorkerTableNum" DataSetColumn="WorkerTableNum" />
              <Mapping SourceColumn="WriteOffActIDWriteOffAct" DataSetColumn="WriteOffActIDWriteOffAct" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExpertTableAdapter" GeneratorDataComponentClassName="ExpertTableAdapter" Name="Expert" UserDataComponentName="ExpertTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.Expert" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Expert] WHERE (([IDExpert] = @Original_IDExpert) AND ([FullName] = @Original_FullName) AND ([SubdivisionIDSubdivision] = @Original_SubdivisionIDSubdivision))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDExpert" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDExpert" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SubdivisionIDSubdivision" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionIDSubdivision" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Expert] ([FullName], [SubdivisionIDSubdivision]) VALUES (@FullName, @SubdivisionIDSubdivision);
SELECT IDExpert, FullName, SubdivisionIDSubdivision FROM Expert WHERE (IDExpert = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SubdivisionIDSubdivision" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionIDSubdivision" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDExpert, FullName, SubdivisionIDSubdivision FROM dbo.Expert</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Expert] SET [FullName] = @FullName, [SubdivisionIDSubdivision] = @SubdivisionIDSubdivision WHERE (([IDExpert] = @Original_IDExpert) AND ([FullName] = @Original_FullName) AND ([SubdivisionIDSubdivision] = @Original_SubdivisionIDSubdivision));
SELECT IDExpert, FullName, SubdivisionIDSubdivision FROM Expert WHERE (IDExpert = @IDExpert)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SubdivisionIDSubdivision" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionIDSubdivision" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDExpert" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDExpert" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SubdivisionIDSubdivision" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionIDSubdivision" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDExpert" ColumnName="IDExpert" DataSourceName="Inventarization.dbo.Expert" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDExpert" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDExpert" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDExpert" DataSetColumn="IDExpert" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
              <Mapping SourceColumn="SubdivisionIDSubdivision" DataSetColumn="SubdivisionIDSubdivision" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExpertiseTableAdapter" GeneratorDataComponentClassName="ExpertiseTableAdapter" Name="Expertise" UserDataComponentName="ExpertiseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.Expertise" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Expertise] WHERE (([IDExpertise] = @Original_IDExpertise) AND ([ExpertiseDate] = @Original_ExpertiseDate) AND ([Commentary] = @Original_Commentary) AND ([DefectiveListIDList] = @Original_DefectiveListIDList) AND ([ExpertIDExpert] = @Original_ExpertIDExpert) AND ((@IsNull_InventoryIDInventory = 1 AND [InventoryIDInventory] IS NULL) OR ([InventoryIDInventory] = @Original_InventoryIDInventory)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDExpertise" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDExpertise" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ExpertiseDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ExpertiseDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Commentary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Commentary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DefectiveListIDList" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DefectiveListIDList" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExpertIDExpert" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExpertIDExpert" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_InventoryIDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryIDInventory" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoryIDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryIDInventory" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Expertise] ([ExpertiseDate], [Commentary], [DefectiveListIDList], [ExpertIDExpert], [InventoryIDInventory]) VALUES (@ExpertiseDate, @Commentary, @DefectiveListIDList, @ExpertIDExpert, @InventoryIDInventory);
SELECT IDExpertise, ExpertiseDate, Commentary, DefectiveListIDList, ExpertIDExpert, InventoryIDInventory FROM Expertise WHERE (IDExpertise = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ExpertiseDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ExpertiseDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Commentary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Commentary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DefectiveListIDList" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DefectiveListIDList" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExpertIDExpert" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExpertIDExpert" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoryIDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryIDInventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDExpertise, ExpertiseDate, Commentary, DefectiveListIDList, ExpertIDExpert, InventoryIDInventory FROM dbo.Expertise</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Expertise] SET [ExpertiseDate] = @ExpertiseDate, [Commentary] = @Commentary, [DefectiveListIDList] = @DefectiveListIDList, [ExpertIDExpert] = @ExpertIDExpert, [InventoryIDInventory] = @InventoryIDInventory WHERE (([IDExpertise] = @Original_IDExpertise) AND ([ExpertiseDate] = @Original_ExpertiseDate) AND ([Commentary] = @Original_Commentary) AND ([DefectiveListIDList] = @Original_DefectiveListIDList) AND ([ExpertIDExpert] = @Original_ExpertIDExpert) AND ((@IsNull_InventoryIDInventory = 1 AND [InventoryIDInventory] IS NULL) OR ([InventoryIDInventory] = @Original_InventoryIDInventory)));
SELECT IDExpertise, ExpertiseDate, Commentary, DefectiveListIDList, ExpertIDExpert, InventoryIDInventory FROM Expertise WHERE (IDExpertise = @IDExpertise)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ExpertiseDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ExpertiseDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Commentary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Commentary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DefectiveListIDList" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DefectiveListIDList" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExpertIDExpert" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExpertIDExpert" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoryIDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryIDInventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDExpertise" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDExpertise" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ExpertiseDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ExpertiseDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Commentary" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Commentary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DefectiveListIDList" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DefectiveListIDList" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExpertIDExpert" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExpertIDExpert" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_InventoryIDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryIDInventory" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InventoryIDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryIDInventory" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDExpertise" ColumnName="IDExpertise" DataSourceName="Inventarization.dbo.Expertise" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDExpertise" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDExpertise" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDExpertise" DataSetColumn="IDExpertise" />
              <Mapping SourceColumn="ExpertiseDate" DataSetColumn="ExpertiseDate" />
              <Mapping SourceColumn="Commentary" DataSetColumn="Commentary" />
              <Mapping SourceColumn="DefectiveListIDList" DataSetColumn="DefectiveListIDList" />
              <Mapping SourceColumn="ExpertIDExpert" DataSetColumn="ExpertIDExpert" />
              <Mapping SourceColumn="InventoryIDInventory" DataSetColumn="InventoryIDInventory" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InventoryTableAdapter" GeneratorDataComponentClassName="InventoryTableAdapter" Name="Inventory" UserDataComponentName="InventoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.Inventory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Inventory] WHERE (([IDInventory] = @Original_IDInventory) AND ([ManufactNum] = @Original_ManufactNum) AND ([FullName] = @Original_FullName) AND ([InvNumber] = @Original_InvNumber) AND ([ReceiveDate] = @Original_ReceiveDate) AND ([Cost] = @Original_Cost) AND ([ObjectTypeTypeID] = @Original_ObjectTypeTypeID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDInventory" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ManufactNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManufactNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InvNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InvNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ReceiveDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReceiveDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Cost" Precision="19" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ObjectTypeTypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObjectTypeTypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Inventory] ([ManufactNum], [FullName], [InvNumber], [ReceiveDate], [Cost], [ObjectTypeTypeID]) VALUES (@ManufactNum, @FullName, @InvNumber, @ReceiveDate, @Cost, @ObjectTypeTypeID);
SELECT IDInventory, ManufactNum, FullName, InvNumber, ReceiveDate, Cost, ObjectTypeTypeID FROM Inventory WHERE (IDInventory = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ManufactNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManufactNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InvNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InvNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ReceiveDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReceiveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Cost" Precision="19" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ObjectTypeTypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObjectTypeTypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDInventory, ManufactNum, FullName, InvNumber, ReceiveDate, Cost, ObjectTypeTypeID FROM dbo.Inventory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Inventory] SET [ManufactNum] = @ManufactNum, [FullName] = @FullName, [InvNumber] = @InvNumber, [ReceiveDate] = @ReceiveDate, [Cost] = @Cost, [ObjectTypeTypeID] = @ObjectTypeTypeID WHERE (([IDInventory] = @Original_IDInventory) AND ([ManufactNum] = @Original_ManufactNum) AND ([FullName] = @Original_FullName) AND ([InvNumber] = @Original_InvNumber) AND ([ReceiveDate] = @Original_ReceiveDate) AND ([Cost] = @Original_Cost) AND ([ObjectTypeTypeID] = @Original_ObjectTypeTypeID));
SELECT IDInventory, ManufactNum, FullName, InvNumber, ReceiveDate, Cost, ObjectTypeTypeID FROM Inventory WHERE (IDInventory = @IDInventory)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ManufactNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManufactNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InvNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InvNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@ReceiveDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReceiveDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Cost" Precision="19" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ObjectTypeTypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObjectTypeTypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDInventory" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ManufactNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ManufactNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InvNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InvNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_ReceiveDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="ReceiveDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Cost" Precision="19" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ObjectTypeTypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObjectTypeTypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDInventory" ColumnName="IDInventory" DataSourceName="Inventarization.dbo.Inventory" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDInventory" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDInventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDInventory" DataSetColumn="IDInventory" />
              <Mapping SourceColumn="ManufactNum" DataSetColumn="ManufactNum" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
              <Mapping SourceColumn="InvNumber" DataSetColumn="InvNumber" />
              <Mapping SourceColumn="ReceiveDate" DataSetColumn="ReceiveDate" />
              <Mapping SourceColumn="Cost" DataSetColumn="Cost" />
              <Mapping SourceColumn="ObjectTypeTypeID" DataSetColumn="ObjectTypeTypeID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InvScheduleTableAdapter" GeneratorDataComponentClassName="InvScheduleTableAdapter" Name="InvSchedule" UserDataComponentName="InvScheduleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.InvSchedule" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[InvSchedule] WHERE (([IDSchedule] = @Original_IDSchedule) AND ([DocName] = @Original_DocName) AND ([DocDate] = @Original_DocDate) AND ([WorkerNum] = @Original_WorkerNum))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDSchedule" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDSchedule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_DocName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DocName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DocDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DocDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[InvSchedule] ([DocName], [DocDate], [WorkerNum]) VALUES (@DocName, @DocDate, @WorkerNum);
SELECT IDSchedule, DocName, DocDate, WorkerNum FROM InvSchedule WHERE (IDSchedule = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DocName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DocName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DocDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DocDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorkerNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDSchedule, DocName, DocDate, WorkerNum FROM dbo.InvSchedule</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[InvSchedule] SET [DocName] = @DocName, [DocDate] = @DocDate, [WorkerNum] = @WorkerNum WHERE (([IDSchedule] = @Original_IDSchedule) AND ([DocName] = @Original_DocName) AND ([DocDate] = @Original_DocDate) AND ([WorkerNum] = @Original_WorkerNum));
SELECT IDSchedule, DocName, DocDate, WorkerNum FROM InvSchedule WHERE (IDSchedule = @IDSchedule)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DocName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DocName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DocDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DocDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorkerNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDSchedule" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDSchedule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_DocName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="DocName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DocDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DocDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDSchedule" ColumnName="IDSchedule" DataSourceName="Inventarization.dbo.InvSchedule" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDSchedule" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDSchedule" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDSchedule" DataSetColumn="IDSchedule" />
              <Mapping SourceColumn="DocName" DataSetColumn="DocName" />
              <Mapping SourceColumn="DocDate" DataSetColumn="DocDate" />
              <Mapping SourceColumn="WorkerNum" DataSetColumn="WorkerNum" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MoveStatementTableAdapter" GeneratorDataComponentClassName="MoveStatementTableAdapter" Name="MoveStatement" UserDataComponentName="MoveStatementTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.MoveStatement" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MoveStatement] WHERE (([IDStatement] = @Original_IDStatement) AND ([StatementDate] = @Original_StatementDate) AND ([WorkerTableNum] = @Original_WorkerTableNum) AND ((@IsNull_SenderSubdivisionID = 1 AND [SenderSubdivisionID] IS NULL) OR ([SenderSubdivisionID] = @Original_SenderSubdivisionID)) AND ([ReceiverSubdivisionID] = @Original_ReceiverSubdivisionID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDStatement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDStatement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_StatementDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="StatementDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerTableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerTableNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SenderSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SenderSubdivisionID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SenderSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SenderSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReceiverSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceiverSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MoveStatement] ([StatementDate], [WorkerTableNum], [SenderSubdivisionID], [ReceiverSubdivisionID]) VALUES (@StatementDate, @WorkerTableNum, @SenderSubdivisionID, @ReceiverSubdivisionID);
SELECT IDStatement, StatementDate, WorkerTableNum, SenderSubdivisionID, ReceiverSubdivisionID FROM MoveStatement WHERE (IDStatement = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@StatementDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="StatementDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorkerTableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerTableNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SenderSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SenderSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReceiverSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceiverSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDStatement, StatementDate, WorkerTableNum, SenderSubdivisionID, ReceiverSubdivisionID FROM dbo.MoveStatement</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MoveStatement] SET [StatementDate] = @StatementDate, [WorkerTableNum] = @WorkerTableNum, [SenderSubdivisionID] = @SenderSubdivisionID, [ReceiverSubdivisionID] = @ReceiverSubdivisionID WHERE (([IDStatement] = @Original_IDStatement) AND ([StatementDate] = @Original_StatementDate) AND ([WorkerTableNum] = @Original_WorkerTableNum) AND ((@IsNull_SenderSubdivisionID = 1 AND [SenderSubdivisionID] IS NULL) OR ([SenderSubdivisionID] = @Original_SenderSubdivisionID)) AND ([ReceiverSubdivisionID] = @Original_ReceiverSubdivisionID));
SELECT IDStatement, StatementDate, WorkerTableNum, SenderSubdivisionID, ReceiverSubdivisionID FROM MoveStatement WHERE (IDStatement = @IDStatement)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@StatementDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="StatementDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WorkerTableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerTableNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SenderSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SenderSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReceiverSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceiverSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDStatement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDStatement" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_StatementDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="StatementDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WorkerTableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WorkerTableNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SenderSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SenderSubdivisionID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SenderSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SenderSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReceiverSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceiverSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDStatement" ColumnName="IDStatement" DataSourceName="Inventarization.dbo.MoveStatement" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDStatement" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDStatement" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDStatement" DataSetColumn="IDStatement" />
              <Mapping SourceColumn="StatementDate" DataSetColumn="StatementDate" />
              <Mapping SourceColumn="WorkerTableNum" DataSetColumn="WorkerTableNum" />
              <Mapping SourceColumn="SenderSubdivisionID" DataSetColumn="SenderSubdivisionID" />
              <Mapping SourceColumn="ReceiverSubdivisionID" DataSetColumn="ReceiverSubdivisionID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ObjectTypeTableAdapter" GeneratorDataComponentClassName="ObjectTypeTableAdapter" Name="ObjectType" UserDataComponentName="ObjectTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.ObjectType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ObjectType] WHERE (([TypeID] = @Original_TypeID) AND ([TypeName] = @Original_TypeName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ObjectType] ([TypeName]) VALUES (@TypeName);
SELECT TypeID, TypeName FROM ObjectType WHERE (TypeID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TypeID, TypeName FROM dbo.ObjectType</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ObjectType] SET [TypeName] = @TypeName WHERE (([TypeID] = @Original_TypeID) AND ([TypeName] = @Original_TypeName));
SELECT TypeID, TypeName FROM ObjectType WHERE (TypeID = @TypeID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TypeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypeID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TypeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TypeName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TypeID" ColumnName="TypeID" DataSourceName="Inventarization.dbo.ObjectType" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TypeID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TypeID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TypeID" DataSetColumn="TypeID" />
              <Mapping SourceColumn="TypeName" DataSetColumn="TypeName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ScheduleContextTableAdapter" GeneratorDataComponentClassName="ScheduleContextTableAdapter" Name="ScheduleContext" UserDataComponentName="ScheduleContextTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.ScheduleContext" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ScheduleContext] ([ScheduleID], [InventoryIDInventory]) VALUES (@ScheduleID, @InventoryIDInventory)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ScheduleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScheduleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoryIDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryIDInventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ScheduleID, InventoryIDInventory FROM dbo.ScheduleContext</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ScheduleID" DataSetColumn="ScheduleID" />
              <Mapping SourceColumn="InventoryIDInventory" DataSetColumn="InventoryIDInventory" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StatementContextTableAdapter" GeneratorDataComponentClassName="StatementContextTableAdapter" Name="StatementContext" UserDataComponentName="StatementContextTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.StatementContext" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StatementContext] ([MoveStatementIDStatement], [InventoryIDInventory]) VALUES (@MoveStatementIDStatement, @InventoryIDInventory)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MoveStatementIDStatement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MoveStatementIDStatement" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InventoryIDInventory" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InventoryIDInventory" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MoveStatementIDStatement, InventoryIDInventory FROM dbo.StatementContext</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MoveStatementIDStatement" DataSetColumn="MoveStatementIDStatement" />
              <Mapping SourceColumn="InventoryIDInventory" DataSetColumn="InventoryIDInventory" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SubdivisionTableAdapter" GeneratorDataComponentClassName="SubdivisionTableAdapter" Name="Subdivision" UserDataComponentName="SubdivisionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.Subdivision" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Subdivision] WHERE (([IDSubdivision] = @Original_IDSubdivision) AND ([Name] = @Original_Name) AND ((@IsNull_MainSubdivisionID = 1 AND [MainSubdivisionID] IS NULL) OR ([MainSubdivisionID] = @Original_MainSubdivisionID)) AND ((@IsNull_DissolutionDate = 1 AND [DissolutionDate] IS NULL) OR ([DissolutionDate] = @Original_DissolutionDate)) AND ([BuildingIDBuilding] = @Original_BuildingIDBuilding))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDSubdivision" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDSubdivision" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MainSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MainSubdivisionID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MainSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MainSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DissolutionDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DissolutionDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DissolutionDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DissolutionDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BuildingIDBuilding" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BuildingIDBuilding" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Subdivision] ([Name], [MainSubdivisionID], [DissolutionDate], [BuildingIDBuilding]) VALUES (@Name, @MainSubdivisionID, @DissolutionDate, @BuildingIDBuilding);
SELECT IDSubdivision, Name, MainSubdivisionID, DissolutionDate, BuildingIDBuilding FROM Subdivision WHERE (IDSubdivision = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MainSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MainSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DissolutionDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DissolutionDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BuildingIDBuilding" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BuildingIDBuilding" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDSubdivision, Name, MainSubdivisionID, DissolutionDate, BuildingIDBuilding FROM dbo.Subdivision</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Subdivision] SET [Name] = @Name, [MainSubdivisionID] = @MainSubdivisionID, [DissolutionDate] = @DissolutionDate, [BuildingIDBuilding] = @BuildingIDBuilding WHERE (([IDSubdivision] = @Original_IDSubdivision) AND ([Name] = @Original_Name) AND ((@IsNull_MainSubdivisionID = 1 AND [MainSubdivisionID] IS NULL) OR ([MainSubdivisionID] = @Original_MainSubdivisionID)) AND ((@IsNull_DissolutionDate = 1 AND [DissolutionDate] IS NULL) OR ([DissolutionDate] = @Original_DissolutionDate)) AND ([BuildingIDBuilding] = @Original_BuildingIDBuilding));
SELECT IDSubdivision, Name, MainSubdivisionID, DissolutionDate, BuildingIDBuilding FROM Subdivision WHERE (IDSubdivision = @IDSubdivision)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MainSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MainSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@DissolutionDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DissolutionDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BuildingIDBuilding" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BuildingIDBuilding" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDSubdivision" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDSubdivision" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MainSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MainSubdivisionID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MainSubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MainSubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_DissolutionDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DissolutionDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_DissolutionDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="DissolutionDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BuildingIDBuilding" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BuildingIDBuilding" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDSubdivision" ColumnName="IDSubdivision" DataSourceName="Inventarization.dbo.Subdivision" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDSubdivision" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDSubdivision" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDSubdivision" DataSetColumn="IDSubdivision" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="MainSubdivisionID" DataSetColumn="MainSubdivisionID" />
              <Mapping SourceColumn="DissolutionDate" DataSetColumn="DissolutionDate" />
              <Mapping SourceColumn="BuildingIDBuilding" DataSetColumn="BuildingIDBuilding" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WaybillTableAdapter" GeneratorDataComponentClassName="WaybillTableAdapter" Name="Waybill" UserDataComponentName="WaybillTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.Waybill" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Waybill] WHERE (([IDWaybill] = @Original_IDWaybill) AND ([WaybillDate] = @Original_WaybillDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDWaybill" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDWaybill" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_WaybillDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="WaybillDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Waybill] ([WaybillDate]) VALUES (@WaybillDate);
SELECT IDWaybill, WaybillDate FROM Waybill WHERE (IDWaybill = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@WaybillDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="WaybillDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDWaybill, WaybillDate FROM dbo.Waybill</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Waybill] SET [WaybillDate] = @WaybillDate WHERE (([IDWaybill] = @Original_IDWaybill) AND ([WaybillDate] = @Original_WaybillDate));
SELECT IDWaybill, WaybillDate FROM Waybill WHERE (IDWaybill = @IDWaybill)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@WaybillDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="WaybillDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDWaybill" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDWaybill" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_WaybillDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="WaybillDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDWaybill" ColumnName="IDWaybill" DataSourceName="Inventarization.dbo.Waybill" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDWaybill" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDWaybill" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDWaybill" DataSetColumn="IDWaybill" />
              <Mapping SourceColumn="WaybillDate" DataSetColumn="WaybillDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WaybillContextTableAdapter" GeneratorDataComponentClassName="WaybillContextTableAdapter" Name="WaybillContext" UserDataComponentName="WaybillContextTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.WaybillContext" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[WaybillContext] ([MoveStatementIDStatement], [WaybillIDWaybill]) VALUES (@MoveStatementIDStatement, @WaybillIDWaybill)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MoveStatementIDStatement" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MoveStatementIDStatement" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WaybillIDWaybill" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WaybillIDWaybill" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MoveStatementIDStatement, WaybillIDWaybill FROM dbo.WaybillContext</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MoveStatementIDStatement" DataSetColumn="MoveStatementIDStatement" />
              <Mapping SourceColumn="WaybillIDWaybill" DataSetColumn="WaybillIDWaybill" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkerTableAdapter" GeneratorDataComponentClassName="WorkerTableAdapter" Name="Worker" UserDataComponentName="WorkerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.Worker" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Worker] WHERE (([TableNum] = @Original_TableNum) AND ([FullName] = @Original_FullName) AND ([AppointmentDate] = @Original_AppointmentDate) AND ((@IsNull_EndDate = 1 AND [EndDate] IS NULL) OR ([EndDate] = @Original_EndDate)) AND ([SubdivisionID] = @Original_SubdivisionID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TableNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_AppointmentDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EndDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_EndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Worker] ([TableNum], [FullName], [AppointmentDate], [EndDate], [SubdivisionID]) VALUES (@TableNum, @FullName, @AppointmentDate, @EndDate, @SubdivisionID);
SELECT TableNum, FullName, AppointmentDate, EndDate, SubdivisionID FROM Worker WHERE (TableNum = @TableNum)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TableNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@AppointmentDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@EndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TableNum, FullName, AppointmentDate, EndDate, SubdivisionID FROM dbo.Worker</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Worker] SET [TableNum] = @TableNum, [FullName] = @FullName, [AppointmentDate] = @AppointmentDate, [EndDate] = @EndDate, [SubdivisionID] = @SubdivisionID WHERE (([TableNum] = @Original_TableNum) AND ([FullName] = @Original_FullName) AND ([AppointmentDate] = @Original_AppointmentDate) AND ((@IsNull_EndDate = 1 AND [EndDate] IS NULL) OR ([EndDate] = @Original_EndDate)) AND ([SubdivisionID] = @Original_SubdivisionID));
SELECT TableNum, FullName, AppointmentDate, EndDate, SubdivisionID FROM Worker WHERE (TableNum = @TableNum)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TableNum" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@AppointmentDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@EndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TableNum" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TableNum" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_AppointmentDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="AppointmentDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EndDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_EndDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="EndDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SubdivisionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubdivisionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TableNum" DataSetColumn="TableNum" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
              <Mapping SourceColumn="AppointmentDate" DataSetColumn="AppointmentDate" />
              <Mapping SourceColumn="EndDate" DataSetColumn="EndDate" />
              <Mapping SourceColumn="SubdivisionID" DataSetColumn="SubdivisionID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WriteOffActTableAdapter" GeneratorDataComponentClassName="WriteOffActTableAdapter" Name="WriteOffAct" UserDataComponentName="WriteOffActTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.WriteOffAct" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[WriteOffAct] WHERE (([IDWriteOffAct] = @Original_IDWriteOffAct) AND ([WriteOffDate] = @Original_WriteOffDate) AND ((@IsNull_WriteOffReasonIDReason = 1 AND [WriteOffReasonIDReason] IS NULL) OR ([WriteOffReasonIDReason] = @Original_WriteOffReasonIDReason)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDWriteOffAct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDWriteOffAct" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_WriteOffDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="WriteOffDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_WriteOffReasonIDReason" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffReasonIDReason" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WriteOffReasonIDReason" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffReasonIDReason" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[WriteOffAct] ([WriteOffDate], [WriteOffReasonIDReason]) VALUES (@WriteOffDate, @WriteOffReasonIDReason);
SELECT IDWriteOffAct, WriteOffDate, WriteOffReasonIDReason FROM WriteOffAct WHERE (IDWriteOffAct = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@WriteOffDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="WriteOffDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WriteOffReasonIDReason" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffReasonIDReason" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDWriteOffAct, WriteOffDate, WriteOffReasonIDReason FROM dbo.WriteOffAct</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[WriteOffAct] SET [WriteOffDate] = @WriteOffDate, [WriteOffReasonIDReason] = @WriteOffReasonIDReason WHERE (([IDWriteOffAct] = @Original_IDWriteOffAct) AND ([WriteOffDate] = @Original_WriteOffDate) AND ((@IsNull_WriteOffReasonIDReason = 1 AND [WriteOffReasonIDReason] IS NULL) OR ([WriteOffReasonIDReason] = @Original_WriteOffReasonIDReason)));
SELECT IDWriteOffAct, WriteOffDate, WriteOffReasonIDReason FROM WriteOffAct WHERE (IDWriteOffAct = @IDWriteOffAct)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@WriteOffDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="WriteOffDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@WriteOffReasonIDReason" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffReasonIDReason" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDWriteOffAct" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDWriteOffAct" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_WriteOffDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="WriteOffDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_WriteOffReasonIDReason" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffReasonIDReason" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_WriteOffReasonIDReason" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="WriteOffReasonIDReason" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDWriteOffAct" ColumnName="IDWriteOffAct" DataSourceName="Inventarization.dbo.WriteOffAct" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDWriteOffAct" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDWriteOffAct" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDWriteOffAct" DataSetColumn="IDWriteOffAct" />
              <Mapping SourceColumn="WriteOffDate" DataSetColumn="WriteOffDate" />
              <Mapping SourceColumn="WriteOffReasonIDReason" DataSetColumn="WriteOffReasonIDReason" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WriteOffReasonTableAdapter" GeneratorDataComponentClassName="WriteOffReasonTableAdapter" Name="WriteOffReason" UserDataComponentName="WriteOffReasonTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="InventarizationConnectionString (Settings)" DbObjectName="Inventarization.dbo.WriteOffReason" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[WriteOffReason] WHERE (([IDReason] = @Original_IDReason) AND ([Description] = @Original_Description))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDReason" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDReason" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[WriteOffReason] ([Description]) VALUES (@Description);
SELECT IDReason, Description FROM WriteOffReason WHERE (IDReason = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IDReason, Description FROM dbo.WriteOffReason</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[WriteOffReason] SET [Description] = @Description WHERE (([IDReason] = @Original_IDReason) AND ([Description] = @Original_Description));
SELECT IDReason, Description FROM WriteOffReason WHERE (IDReason = @IDReason)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IDReason" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDReason" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IDReason" ColumnName="IDReason" DataSourceName="Inventarization.dbo.WriteOffReason" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDReason" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IDReason" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IDReason" DataSetColumn="IDReason" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="InventarizationDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="InventarizationDataSet" msprop:Generator_UserDSName="InventarizationDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Building" msprop:Generator_TableClassName="BuildingDataTable" msprop:Generator_TableVarName="tableBuilding" msprop:Generator_TablePropName="Building" msprop:Generator_RowDeletingName="BuildingRowDeleting" msprop:Generator_RowChangingName="BuildingRowChanging" msprop:Generator_RowEvHandlerName="BuildingRowChangeEventHandler" msprop:Generator_RowDeletedName="BuildingRowDeleted" msprop:Generator_UserTableName="Building" msprop:Generator_RowChangedName="BuildingRowChanged" msprop:Generator_RowEvArgName="BuildingRowChangeEvent" msprop:Generator_RowClassName="BuildingRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDBuilding" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDBuilding" msprop:Generator_ColumnPropNameInRow="IDBuilding" msprop:Generator_ColumnPropNameInTable="IDBuildingColumn" msprop:Generator_UserColumnName="IDBuilding" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DefectiveList" msprop:Generator_TableClassName="DefectiveListDataTable" msprop:Generator_TableVarName="tableDefectiveList" msprop:Generator_TablePropName="DefectiveList" msprop:Generator_RowDeletingName="DefectiveListRowDeleting" msprop:Generator_RowChangingName="DefectiveListRowChanging" msprop:Generator_RowEvHandlerName="DefectiveListRowChangeEventHandler" msprop:Generator_RowDeletedName="DefectiveListRowDeleted" msprop:Generator_UserTableName="DefectiveList" msprop:Generator_RowChangedName="DefectiveListRowChanged" msprop:Generator_RowEvArgName="DefectiveListRowChangeEvent" msprop:Generator_RowClassName="DefectiveListRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDList" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDList" msprop:Generator_ColumnPropNameInRow="IDList" msprop:Generator_ColumnPropNameInTable="IDListColumn" msprop:Generator_UserColumnName="IDList" type="xs:int" />
              <xs:element name="DocDate" msprop:Generator_ColumnVarNameInTable="columnDocDate" msprop:Generator_ColumnPropNameInRow="DocDate" msprop:Generator_ColumnPropNameInTable="DocDateColumn" msprop:Generator_UserColumnName="DocDate" type="xs:dateTime" />
              <xs:element name="WorkerTableNum" msprop:Generator_ColumnVarNameInTable="columnWorkerTableNum" msprop:Generator_ColumnPropNameInRow="WorkerTableNum" msprop:Generator_ColumnPropNameInTable="WorkerTableNumColumn" msprop:Generator_UserColumnName="WorkerTableNum" type="xs:int" />
              <xs:element name="WriteOffActIDWriteOffAct" msprop:Generator_ColumnVarNameInTable="columnWriteOffActIDWriteOffAct" msprop:Generator_ColumnPropNameInRow="WriteOffActIDWriteOffAct" msprop:Generator_ColumnPropNameInTable="WriteOffActIDWriteOffActColumn" msprop:Generator_UserColumnName="WriteOffActIDWriteOffAct" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Expert" msprop:Generator_TableClassName="ExpertDataTable" msprop:Generator_TableVarName="tableExpert" msprop:Generator_TablePropName="Expert" msprop:Generator_RowDeletingName="ExpertRowDeleting" msprop:Generator_RowChangingName="ExpertRowChanging" msprop:Generator_RowEvHandlerName="ExpertRowChangeEventHandler" msprop:Generator_RowDeletedName="ExpertRowDeleted" msprop:Generator_UserTableName="Expert" msprop:Generator_RowChangedName="ExpertRowChanged" msprop:Generator_RowEvArgName="ExpertRowChangeEvent" msprop:Generator_RowClassName="ExpertRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDExpert" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDExpert" msprop:Generator_ColumnPropNameInRow="IDExpert" msprop:Generator_ColumnPropNameInTable="IDExpertColumn" msprop:Generator_UserColumnName="IDExpert" type="xs:int" />
              <xs:element name="FullName" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SubdivisionIDSubdivision" msprop:Generator_ColumnVarNameInTable="columnSubdivisionIDSubdivision" msprop:Generator_ColumnPropNameInRow="SubdivisionIDSubdivision" msprop:Generator_ColumnPropNameInTable="SubdivisionIDSubdivisionColumn" msprop:Generator_UserColumnName="SubdivisionIDSubdivision" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Expertise" msprop:Generator_TableClassName="ExpertiseDataTable" msprop:Generator_TableVarName="tableExpertise" msprop:Generator_TablePropName="Expertise" msprop:Generator_RowDeletingName="ExpertiseRowDeleting" msprop:Generator_RowChangingName="ExpertiseRowChanging" msprop:Generator_RowEvHandlerName="ExpertiseRowChangeEventHandler" msprop:Generator_RowDeletedName="ExpertiseRowDeleted" msprop:Generator_UserTableName="Expertise" msprop:Generator_RowChangedName="ExpertiseRowChanged" msprop:Generator_RowEvArgName="ExpertiseRowChangeEvent" msprop:Generator_RowClassName="ExpertiseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDExpertise" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDExpertise" msprop:Generator_ColumnPropNameInRow="IDExpertise" msprop:Generator_ColumnPropNameInTable="IDExpertiseColumn" msprop:Generator_UserColumnName="IDExpertise" type="xs:int" />
              <xs:element name="ExpertiseDate" msprop:Generator_ColumnVarNameInTable="columnExpertiseDate" msprop:Generator_ColumnPropNameInRow="ExpertiseDate" msprop:Generator_ColumnPropNameInTable="ExpertiseDateColumn" msprop:Generator_UserColumnName="ExpertiseDate" type="xs:dateTime" />
              <xs:element name="Commentary" msprop:Generator_ColumnVarNameInTable="columnCommentary" msprop:Generator_ColumnPropNameInRow="Commentary" msprop:Generator_ColumnPropNameInTable="CommentaryColumn" msprop:Generator_UserColumnName="Commentary">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DefectiveListIDList" msprop:Generator_ColumnVarNameInTable="columnDefectiveListIDList" msprop:Generator_ColumnPropNameInRow="DefectiveListIDList" msprop:Generator_ColumnPropNameInTable="DefectiveListIDListColumn" msprop:Generator_UserColumnName="DefectiveListIDList" type="xs:int" />
              <xs:element name="ExpertIDExpert" msprop:Generator_ColumnVarNameInTable="columnExpertIDExpert" msprop:Generator_ColumnPropNameInRow="ExpertIDExpert" msprop:Generator_ColumnPropNameInTable="ExpertIDExpertColumn" msprop:Generator_UserColumnName="ExpertIDExpert" type="xs:int" />
              <xs:element name="InventoryIDInventory" msprop:Generator_ColumnVarNameInTable="columnInventoryIDInventory" msprop:Generator_ColumnPropNameInRow="InventoryIDInventory" msprop:Generator_ColumnPropNameInTable="InventoryIDInventoryColumn" msprop:Generator_UserColumnName="InventoryIDInventory" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Inventory" msprop:Generator_TableClassName="InventoryDataTable" msprop:Generator_TableVarName="tableInventory" msprop:Generator_TablePropName="Inventory" msprop:Generator_RowDeletingName="InventoryRowDeleting" msprop:Generator_RowChangingName="InventoryRowChanging" msprop:Generator_RowEvHandlerName="InventoryRowChangeEventHandler" msprop:Generator_RowDeletedName="InventoryRowDeleted" msprop:Generator_UserTableName="Inventory" msprop:Generator_RowChangedName="InventoryRowChanged" msprop:Generator_RowEvArgName="InventoryRowChangeEvent" msprop:Generator_RowClassName="InventoryRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDInventory" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDInventory" msprop:Generator_ColumnPropNameInRow="IDInventory" msprop:Generator_ColumnPropNameInTable="IDInventoryColumn" msprop:Generator_UserColumnName="IDInventory" type="xs:int" />
              <xs:element name="ManufactNum" msprop:Generator_ColumnVarNameInTable="columnManufactNum" msprop:Generator_ColumnPropNameInRow="ManufactNum" msprop:Generator_ColumnPropNameInTable="ManufactNumColumn" msprop:Generator_UserColumnName="ManufactNum" type="xs:int" />
              <xs:element name="FullName" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="InvNumber" msprop:Generator_ColumnVarNameInTable="columnInvNumber" msprop:Generator_ColumnPropNameInRow="InvNumber" msprop:Generator_ColumnPropNameInTable="InvNumberColumn" msprop:Generator_UserColumnName="InvNumber" type="xs:int" />
              <xs:element name="ReceiveDate" msprop:Generator_ColumnVarNameInTable="columnReceiveDate" msprop:Generator_ColumnPropNameInRow="ReceiveDate" msprop:Generator_ColumnPropNameInTable="ReceiveDateColumn" msprop:Generator_UserColumnName="ReceiveDate" type="xs:dateTime" />
              <xs:element name="Cost" msprop:Generator_ColumnVarNameInTable="columnCost" msprop:Generator_ColumnPropNameInRow="Cost" msprop:Generator_ColumnPropNameInTable="CostColumn" msprop:Generator_UserColumnName="Cost" type="xs:decimal" />
              <xs:element name="ObjectTypeTypeID" msprop:Generator_ColumnVarNameInTable="columnObjectTypeTypeID" msprop:Generator_ColumnPropNameInRow="ObjectTypeTypeID" msprop:Generator_ColumnPropNameInTable="ObjectTypeTypeIDColumn" msprop:Generator_UserColumnName="ObjectTypeTypeID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="InvSchedule" msprop:Generator_TableClassName="InvScheduleDataTable" msprop:Generator_TableVarName="tableInvSchedule" msprop:Generator_TablePropName="InvSchedule" msprop:Generator_RowDeletingName="InvScheduleRowDeleting" msprop:Generator_RowChangingName="InvScheduleRowChanging" msprop:Generator_RowEvHandlerName="InvScheduleRowChangeEventHandler" msprop:Generator_RowDeletedName="InvScheduleRowDeleted" msprop:Generator_UserTableName="InvSchedule" msprop:Generator_RowChangedName="InvScheduleRowChanged" msprop:Generator_RowEvArgName="InvScheduleRowChangeEvent" msprop:Generator_RowClassName="InvScheduleRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDSchedule" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDSchedule" msprop:Generator_ColumnPropNameInRow="IDSchedule" msprop:Generator_ColumnPropNameInTable="IDScheduleColumn" msprop:Generator_UserColumnName="IDSchedule" type="xs:int" />
              <xs:element name="DocName" msprop:Generator_ColumnVarNameInTable="columnDocName" msprop:Generator_ColumnPropNameInRow="DocName" msprop:Generator_ColumnPropNameInTable="DocNameColumn" msprop:Generator_UserColumnName="DocName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DocDate" msprop:Generator_ColumnVarNameInTable="columnDocDate" msprop:Generator_ColumnPropNameInRow="DocDate" msprop:Generator_ColumnPropNameInTable="DocDateColumn" msprop:Generator_UserColumnName="DocDate" type="xs:dateTime" />
              <xs:element name="WorkerNum" msprop:Generator_ColumnVarNameInTable="columnWorkerNum" msprop:Generator_ColumnPropNameInRow="WorkerNum" msprop:Generator_ColumnPropNameInTable="WorkerNumColumn" msprop:Generator_UserColumnName="WorkerNum" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MoveStatement" msprop:Generator_TableClassName="MoveStatementDataTable" msprop:Generator_TableVarName="tableMoveStatement" msprop:Generator_TablePropName="MoveStatement" msprop:Generator_RowDeletingName="MoveStatementRowDeleting" msprop:Generator_RowChangingName="MoveStatementRowChanging" msprop:Generator_RowEvHandlerName="MoveStatementRowChangeEventHandler" msprop:Generator_RowDeletedName="MoveStatementRowDeleted" msprop:Generator_UserTableName="MoveStatement" msprop:Generator_RowChangedName="MoveStatementRowChanged" msprop:Generator_RowEvArgName="MoveStatementRowChangeEvent" msprop:Generator_RowClassName="MoveStatementRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDStatement" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDStatement" msprop:Generator_ColumnPropNameInRow="IDStatement" msprop:Generator_ColumnPropNameInTable="IDStatementColumn" msprop:Generator_UserColumnName="IDStatement" type="xs:int" />
              <xs:element name="StatementDate" msprop:Generator_ColumnVarNameInTable="columnStatementDate" msprop:Generator_ColumnPropNameInRow="StatementDate" msprop:Generator_ColumnPropNameInTable="StatementDateColumn" msprop:Generator_UserColumnName="StatementDate" type="xs:dateTime" />
              <xs:element name="WorkerTableNum" msprop:Generator_ColumnVarNameInTable="columnWorkerTableNum" msprop:Generator_ColumnPropNameInRow="WorkerTableNum" msprop:Generator_ColumnPropNameInTable="WorkerTableNumColumn" msprop:Generator_UserColumnName="WorkerTableNum" type="xs:int" />
              <xs:element name="SenderSubdivisionID" msprop:Generator_ColumnVarNameInTable="columnSenderSubdivisionID" msprop:Generator_ColumnPropNameInRow="SenderSubdivisionID" msprop:Generator_ColumnPropNameInTable="SenderSubdivisionIDColumn" msprop:Generator_UserColumnName="SenderSubdivisionID" type="xs:int" minOccurs="0" />
              <xs:element name="ReceiverSubdivisionID" msprop:Generator_ColumnVarNameInTable="columnReceiverSubdivisionID" msprop:Generator_ColumnPropNameInRow="ReceiverSubdivisionID" msprop:Generator_ColumnPropNameInTable="ReceiverSubdivisionIDColumn" msprop:Generator_UserColumnName="ReceiverSubdivisionID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ObjectType" msprop:Generator_TableClassName="ObjectTypeDataTable" msprop:Generator_TableVarName="tableObjectType" msprop:Generator_TablePropName="ObjectType" msprop:Generator_RowDeletingName="ObjectTypeRowDeleting" msprop:Generator_RowChangingName="ObjectTypeRowChanging" msprop:Generator_RowEvHandlerName="ObjectTypeRowChangeEventHandler" msprop:Generator_RowDeletedName="ObjectTypeRowDeleted" msprop:Generator_UserTableName="ObjectType" msprop:Generator_RowChangedName="ObjectTypeRowChanged" msprop:Generator_RowEvArgName="ObjectTypeRowChangeEvent" msprop:Generator_RowClassName="ObjectTypeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TypeID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTypeID" msprop:Generator_ColumnPropNameInRow="TypeID" msprop:Generator_ColumnPropNameInTable="TypeIDColumn" msprop:Generator_UserColumnName="TypeID" type="xs:int" />
              <xs:element name="TypeName" msprop:Generator_ColumnVarNameInTable="columnTypeName" msprop:Generator_ColumnPropNameInRow="TypeName" msprop:Generator_ColumnPropNameInTable="TypeNameColumn" msprop:Generator_UserColumnName="TypeName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ScheduleContext" msprop:Generator_TableClassName="ScheduleContextDataTable" msprop:Generator_TableVarName="tableScheduleContext" msprop:Generator_TablePropName="ScheduleContext" msprop:Generator_RowDeletingName="ScheduleContextRowDeleting" msprop:Generator_RowChangingName="ScheduleContextRowChanging" msprop:Generator_RowEvHandlerName="ScheduleContextRowChangeEventHandler" msprop:Generator_RowDeletedName="ScheduleContextRowDeleted" msprop:Generator_UserTableName="ScheduleContext" msprop:Generator_RowChangedName="ScheduleContextRowChanged" msprop:Generator_RowEvArgName="ScheduleContextRowChangeEvent" msprop:Generator_RowClassName="ScheduleContextRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ScheduleID" msprop:Generator_ColumnVarNameInTable="columnScheduleID" msprop:Generator_ColumnPropNameInRow="ScheduleID" msprop:Generator_ColumnPropNameInTable="ScheduleIDColumn" msprop:Generator_UserColumnName="ScheduleID" type="xs:int" />
              <xs:element name="InventoryIDInventory" msprop:Generator_ColumnVarNameInTable="columnInventoryIDInventory" msprop:Generator_ColumnPropNameInRow="InventoryIDInventory" msprop:Generator_ColumnPropNameInTable="InventoryIDInventoryColumn" msprop:Generator_UserColumnName="InventoryIDInventory" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StatementContext" msprop:Generator_TableClassName="StatementContextDataTable" msprop:Generator_TableVarName="tableStatementContext" msprop:Generator_TablePropName="StatementContext" msprop:Generator_RowDeletingName="StatementContextRowDeleting" msprop:Generator_RowChangingName="StatementContextRowChanging" msprop:Generator_RowEvHandlerName="StatementContextRowChangeEventHandler" msprop:Generator_RowDeletedName="StatementContextRowDeleted" msprop:Generator_UserTableName="StatementContext" msprop:Generator_RowChangedName="StatementContextRowChanged" msprop:Generator_RowEvArgName="StatementContextRowChangeEvent" msprop:Generator_RowClassName="StatementContextRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MoveStatementIDStatement" msprop:Generator_ColumnVarNameInTable="columnMoveStatementIDStatement" msprop:Generator_ColumnPropNameInRow="MoveStatementIDStatement" msprop:Generator_ColumnPropNameInTable="MoveStatementIDStatementColumn" msprop:Generator_UserColumnName="MoveStatementIDStatement" type="xs:int" />
              <xs:element name="InventoryIDInventory" msprop:Generator_ColumnVarNameInTable="columnInventoryIDInventory" msprop:Generator_ColumnPropNameInRow="InventoryIDInventory" msprop:Generator_ColumnPropNameInTable="InventoryIDInventoryColumn" msprop:Generator_UserColumnName="InventoryIDInventory" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Subdivision" msprop:Generator_TableClassName="SubdivisionDataTable" msprop:Generator_TableVarName="tableSubdivision" msprop:Generator_TablePropName="Subdivision" msprop:Generator_RowDeletingName="SubdivisionRowDeleting" msprop:Generator_RowChangingName="SubdivisionRowChanging" msprop:Generator_RowEvHandlerName="SubdivisionRowChangeEventHandler" msprop:Generator_RowDeletedName="SubdivisionRowDeleted" msprop:Generator_UserTableName="Subdivision" msprop:Generator_RowChangedName="SubdivisionRowChanged" msprop:Generator_RowEvArgName="SubdivisionRowChangeEvent" msprop:Generator_RowClassName="SubdivisionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDSubdivision" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDSubdivision" msprop:Generator_ColumnPropNameInRow="IDSubdivision" msprop:Generator_ColumnPropNameInTable="IDSubdivisionColumn" msprop:Generator_UserColumnName="IDSubdivision" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MainSubdivisionID" msprop:Generator_ColumnVarNameInTable="columnMainSubdivisionID" msprop:Generator_ColumnPropNameInRow="MainSubdivisionID" msprop:Generator_ColumnPropNameInTable="MainSubdivisionIDColumn" msprop:Generator_UserColumnName="MainSubdivisionID" type="xs:int" minOccurs="0" />
              <xs:element name="DissolutionDate" msprop:Generator_ColumnVarNameInTable="columnDissolutionDate" msprop:Generator_ColumnPropNameInRow="DissolutionDate" msprop:Generator_ColumnPropNameInTable="DissolutionDateColumn" msprop:Generator_UserColumnName="DissolutionDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="BuildingIDBuilding" msprop:Generator_ColumnVarNameInTable="columnBuildingIDBuilding" msprop:Generator_ColumnPropNameInRow="BuildingIDBuilding" msprop:Generator_ColumnPropNameInTable="BuildingIDBuildingColumn" msprop:Generator_UserColumnName="BuildingIDBuilding" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Waybill" msprop:Generator_TableClassName="WaybillDataTable" msprop:Generator_TableVarName="tableWaybill" msprop:Generator_TablePropName="Waybill" msprop:Generator_RowDeletingName="WaybillRowDeleting" msprop:Generator_RowChangingName="WaybillRowChanging" msprop:Generator_RowEvHandlerName="WaybillRowChangeEventHandler" msprop:Generator_RowDeletedName="WaybillRowDeleted" msprop:Generator_UserTableName="Waybill" msprop:Generator_RowChangedName="WaybillRowChanged" msprop:Generator_RowEvArgName="WaybillRowChangeEvent" msprop:Generator_RowClassName="WaybillRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDWaybill" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDWaybill" msprop:Generator_ColumnPropNameInRow="IDWaybill" msprop:Generator_ColumnPropNameInTable="IDWaybillColumn" msprop:Generator_UserColumnName="IDWaybill" type="xs:int" />
              <xs:element name="WaybillDate" msprop:Generator_ColumnVarNameInTable="columnWaybillDate" msprop:Generator_ColumnPropNameInRow="WaybillDate" msprop:Generator_ColumnPropNameInTable="WaybillDateColumn" msprop:Generator_UserColumnName="WaybillDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WaybillContext" msprop:Generator_TableClassName="WaybillContextDataTable" msprop:Generator_TableVarName="tableWaybillContext" msprop:Generator_TablePropName="WaybillContext" msprop:Generator_RowDeletingName="WaybillContextRowDeleting" msprop:Generator_RowChangingName="WaybillContextRowChanging" msprop:Generator_RowEvHandlerName="WaybillContextRowChangeEventHandler" msprop:Generator_RowDeletedName="WaybillContextRowDeleted" msprop:Generator_UserTableName="WaybillContext" msprop:Generator_RowChangedName="WaybillContextRowChanged" msprop:Generator_RowEvArgName="WaybillContextRowChangeEvent" msprop:Generator_RowClassName="WaybillContextRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MoveStatementIDStatement" msprop:Generator_ColumnVarNameInTable="columnMoveStatementIDStatement" msprop:Generator_ColumnPropNameInRow="MoveStatementIDStatement" msprop:Generator_ColumnPropNameInTable="MoveStatementIDStatementColumn" msprop:Generator_UserColumnName="MoveStatementIDStatement" type="xs:int" />
              <xs:element name="WaybillIDWaybill" msprop:Generator_ColumnVarNameInTable="columnWaybillIDWaybill" msprop:Generator_ColumnPropNameInRow="WaybillIDWaybill" msprop:Generator_ColumnPropNameInTable="WaybillIDWaybillColumn" msprop:Generator_UserColumnName="WaybillIDWaybill" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Worker" msprop:Generator_TableClassName="WorkerDataTable" msprop:Generator_TableVarName="tableWorker" msprop:Generator_TablePropName="Worker" msprop:Generator_RowDeletingName="WorkerRowDeleting" msprop:Generator_RowChangingName="WorkerRowChanging" msprop:Generator_RowEvHandlerName="WorkerRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkerRowDeleted" msprop:Generator_UserTableName="Worker" msprop:Generator_RowChangedName="WorkerRowChanged" msprop:Generator_RowEvArgName="WorkerRowChangeEvent" msprop:Generator_RowClassName="WorkerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TableNum" msprop:Generator_ColumnVarNameInTable="columnTableNum" msprop:Generator_ColumnPropNameInRow="TableNum" msprop:Generator_ColumnPropNameInTable="TableNumColumn" msprop:Generator_UserColumnName="TableNum" type="xs:int" />
              <xs:element name="FullName" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AppointmentDate" msprop:Generator_ColumnVarNameInTable="columnAppointmentDate" msprop:Generator_ColumnPropNameInRow="AppointmentDate" msprop:Generator_ColumnPropNameInTable="AppointmentDateColumn" msprop:Generator_UserColumnName="AppointmentDate" type="xs:dateTime" />
              <xs:element name="EndDate" msprop:Generator_ColumnVarNameInTable="columnEndDate" msprop:Generator_ColumnPropNameInRow="EndDate" msprop:Generator_ColumnPropNameInTable="EndDateColumn" msprop:Generator_UserColumnName="EndDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="SubdivisionID" msprop:Generator_ColumnVarNameInTable="columnSubdivisionID" msprop:Generator_ColumnPropNameInRow="SubdivisionID" msprop:Generator_ColumnPropNameInTable="SubdivisionIDColumn" msprop:Generator_UserColumnName="SubdivisionID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WriteOffAct" msprop:Generator_TableClassName="WriteOffActDataTable" msprop:Generator_TableVarName="tableWriteOffAct" msprop:Generator_TablePropName="WriteOffAct" msprop:Generator_RowDeletingName="WriteOffActRowDeleting" msprop:Generator_RowChangingName="WriteOffActRowChanging" msprop:Generator_RowEvHandlerName="WriteOffActRowChangeEventHandler" msprop:Generator_RowDeletedName="WriteOffActRowDeleted" msprop:Generator_UserTableName="WriteOffAct" msprop:Generator_RowChangedName="WriteOffActRowChanged" msprop:Generator_RowEvArgName="WriteOffActRowChangeEvent" msprop:Generator_RowClassName="WriteOffActRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDWriteOffAct" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDWriteOffAct" msprop:Generator_ColumnPropNameInRow="IDWriteOffAct" msprop:Generator_ColumnPropNameInTable="IDWriteOffActColumn" msprop:Generator_UserColumnName="IDWriteOffAct" type="xs:int" />
              <xs:element name="WriteOffDate" msprop:Generator_ColumnVarNameInTable="columnWriteOffDate" msprop:Generator_ColumnPropNameInRow="WriteOffDate" msprop:Generator_ColumnPropNameInTable="WriteOffDateColumn" msprop:Generator_UserColumnName="WriteOffDate" type="xs:dateTime" />
              <xs:element name="WriteOffReasonIDReason" msprop:Generator_ColumnVarNameInTable="columnWriteOffReasonIDReason" msprop:Generator_ColumnPropNameInRow="WriteOffReasonIDReason" msprop:Generator_ColumnPropNameInTable="WriteOffReasonIDReasonColumn" msprop:Generator_UserColumnName="WriteOffReasonIDReason" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="WriteOffReason" msprop:Generator_TableClassName="WriteOffReasonDataTable" msprop:Generator_TableVarName="tableWriteOffReason" msprop:Generator_TablePropName="WriteOffReason" msprop:Generator_RowDeletingName="WriteOffReasonRowDeleting" msprop:Generator_RowChangingName="WriteOffReasonRowChanging" msprop:Generator_RowEvHandlerName="WriteOffReasonRowChangeEventHandler" msprop:Generator_RowDeletedName="WriteOffReasonRowDeleted" msprop:Generator_UserTableName="WriteOffReason" msprop:Generator_RowChangedName="WriteOffReasonRowChanged" msprop:Generator_RowEvArgName="WriteOffReasonRowChangeEvent" msprop:Generator_RowClassName="WriteOffReasonRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IDReason" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIDReason" msprop:Generator_ColumnPropNameInRow="IDReason" msprop:Generator_ColumnPropNameInTable="IDReasonColumn" msprop:Generator_UserColumnName="IDReason" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Building" />
      <xs:field xpath="mstns:IDBuilding" />
    </xs:unique>
    <xs:unique name="DefectiveList_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DefectiveList" />
      <xs:field xpath="mstns:IDList" />
    </xs:unique>
    <xs:unique name="Expert_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Expert" />
      <xs:field xpath="mstns:IDExpert" />
    </xs:unique>
    <xs:unique name="Expertise_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Expertise" />
      <xs:field xpath="mstns:IDExpertise" />
    </xs:unique>
    <xs:unique name="Inventory_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Inventory" />
      <xs:field xpath="mstns:IDInventory" />
    </xs:unique>
    <xs:unique name="InvSchedule_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:InvSchedule" />
      <xs:field xpath="mstns:IDSchedule" />
    </xs:unique>
    <xs:unique name="MoveStatement_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MoveStatement" />
      <xs:field xpath="mstns:IDStatement" />
    </xs:unique>
    <xs:unique name="ObjectType_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ObjectType" />
      <xs:field xpath="mstns:TypeID" />
    </xs:unique>
    <xs:unique name="Subdivision_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Subdivision" />
      <xs:field xpath="mstns:IDSubdivision" />
    </xs:unique>
    <xs:unique name="Waybill_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Waybill" />
      <xs:field xpath="mstns:IDWaybill" />
    </xs:unique>
    <xs:unique name="Worker_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Worker" />
      <xs:field xpath="mstns:TableNum" />
    </xs:unique>
    <xs:unique name="WriteOffAct_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WriteOffAct" />
      <xs:field xpath="mstns:IDWriteOffAct" />
    </xs:unique>
    <xs:unique name="WriteOffReason_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:WriteOffReason" />
      <xs:field xpath="mstns:IDReason" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FKDefectiveL271518" msdata:parent="Worker" msdata:child="DefectiveList" msdata:parentkey="TableNum" msdata:childkey="WorkerTableNum" msprop:Generator_UserChildTable="DefectiveList" msprop:Generator_ChildPropName="GetDefectiveListRows" msprop:Generator_UserRelationName="FKDefectiveL271518" msprop:Generator_RelationVarName="relationFKDefectiveL271518" msprop:Generator_UserParentTable="Worker" msprop:Generator_ParentPropName="WorkerRow" />
      <msdata:Relationship name="FKDefectiveL833326" msdata:parent="WriteOffAct" msdata:child="DefectiveList" msdata:parentkey="IDWriteOffAct" msdata:childkey="WriteOffActIDWriteOffAct" msprop:Generator_UserChildTable="DefectiveList" msprop:Generator_ChildPropName="GetDefectiveListRows" msprop:Generator_UserRelationName="FKDefectiveL833326" msprop:Generator_RelationVarName="relationFKDefectiveL833326" msprop:Generator_UserParentTable="WriteOffAct" msprop:Generator_ParentPropName="WriteOffActRow" />
      <msdata:Relationship name="FKExpert769302" msdata:parent="Subdivision" msdata:child="Expert" msdata:parentkey="IDSubdivision" msdata:childkey="SubdivisionIDSubdivision" msprop:Generator_UserChildTable="Expert" msprop:Generator_ChildPropName="GetExpertRows" msprop:Generator_UserRelationName="FKExpert769302" msprop:Generator_RelationVarName="relationFKExpert769302" msprop:Generator_UserParentTable="Subdivision" msprop:Generator_ParentPropName="SubdivisionRow" />
      <msdata:Relationship name="FKExpertise160847" msdata:parent="DefectiveList" msdata:child="Expertise" msdata:parentkey="IDList" msdata:childkey="DefectiveListIDList" msprop:Generator_UserChildTable="Expertise" msprop:Generator_ChildPropName="GetExpertiseRows" msprop:Generator_UserRelationName="FKExpertise160847" msprop:Generator_ParentPropName="DefectiveListRow" msprop:Generator_RelationVarName="relationFKExpertise160847" msprop:Generator_UserParentTable="DefectiveList" />
      <msdata:Relationship name="FKExpertise270232" msdata:parent="Expert" msdata:child="Expertise" msdata:parentkey="IDExpert" msdata:childkey="ExpertIDExpert" msprop:Generator_UserChildTable="Expertise" msprop:Generator_ChildPropName="GetExpertiseRows" msprop:Generator_UserRelationName="FKExpertise270232" msprop:Generator_ParentPropName="ExpertRow" msprop:Generator_RelationVarName="relationFKExpertise270232" msprop:Generator_UserParentTable="Expert" />
      <msdata:Relationship name="FKExpertise786849" msdata:parent="Inventory" msdata:child="Expertise" msdata:parentkey="IDInventory" msdata:childkey="InventoryIDInventory" msprop:Generator_UserChildTable="Expertise" msprop:Generator_ChildPropName="GetExpertiseRows" msprop:Generator_UserRelationName="FKExpertise786849" msprop:Generator_RelationVarName="relationFKExpertise786849" msprop:Generator_UserParentTable="Inventory" msprop:Generator_ParentPropName="InventoryRow" />
      <msdata:Relationship name="FKInventory805665" msdata:parent="ObjectType" msdata:child="Inventory" msdata:parentkey="TypeID" msdata:childkey="ObjectTypeTypeID" msprop:Generator_UserChildTable="Inventory" msprop:Generator_ChildPropName="GetInventoryRows" msprop:Generator_UserRelationName="FKInventory805665" msprop:Generator_RelationVarName="relationFKInventory805665" msprop:Generator_UserParentTable="ObjectType" msprop:Generator_ParentPropName="ObjectTypeRow" />
      <msdata:Relationship name="FKInvSchedul683841" msdata:parent="Worker" msdata:child="InvSchedule" msdata:parentkey="TableNum" msdata:childkey="WorkerNum" msprop:Generator_UserChildTable="InvSchedule" msprop:Generator_ChildPropName="GetInvScheduleRows" msprop:Generator_UserRelationName="FKInvSchedul683841" msprop:Generator_RelationVarName="relationFKInvSchedul683841" msprop:Generator_UserParentTable="Worker" msprop:Generator_ParentPropName="WorkerRow" />
      <msdata:Relationship name="FKMoveStatem637032" msdata:parent="Subdivision" msdata:child="MoveStatement" msdata:parentkey="IDSubdivision" msdata:childkey="ReceiverSubdivisionID" msprop:Generator_UserChildTable="MoveStatement" msprop:Generator_ChildPropName="GetMoveStatementRowsByFKMoveStatem637032" msprop:Generator_UserRelationName="FKMoveStatem637032" msprop:Generator_RelationVarName="relationFKMoveStatem637032" msprop:Generator_UserParentTable="Subdivision" msprop:Generator_ParentPropName="SubdivisionRowByFKMoveStatem637032" />
      <msdata:Relationship name="FKMoveStatem824083" msdata:parent="Worker" msdata:child="MoveStatement" msdata:parentkey="TableNum" msdata:childkey="WorkerTableNum" msprop:Generator_UserChildTable="MoveStatement" msprop:Generator_ChildPropName="GetMoveStatementRows" msprop:Generator_UserRelationName="FKMoveStatem824083" msprop:Generator_RelationVarName="relationFKMoveStatem824083" msprop:Generator_UserParentTable="Worker" msprop:Generator_ParentPropName="WorkerRow" />
      <msdata:Relationship name="FKMoveStatem942769" msdata:parent="Subdivision" msdata:child="MoveStatement" msdata:parentkey="IDSubdivision" msdata:childkey="SenderSubdivisionID" msprop:Generator_UserChildTable="MoveStatement" msprop:Generator_ChildPropName="GetMoveStatementRowsByFKMoveStatem942769" msprop:Generator_UserRelationName="FKMoveStatem942769" msprop:Generator_RelationVarName="relationFKMoveStatem942769" msprop:Generator_UserParentTable="Subdivision" msprop:Generator_ParentPropName="SubdivisionRowByFKMoveStatem942769" />
      <msdata:Relationship name="FKScheduleCo124961" msdata:parent="Inventory" msdata:child="ScheduleContext" msdata:parentkey="IDInventory" msdata:childkey="InventoryIDInventory" msprop:Generator_UserChildTable="ScheduleContext" msprop:Generator_ChildPropName="GetScheduleContextRows" msprop:Generator_UserRelationName="FKScheduleCo124961" msprop:Generator_ParentPropName="InventoryRow" msprop:Generator_RelationVarName="relationFKScheduleCo124961" msprop:Generator_UserParentTable="Inventory" />
      <msdata:Relationship name="FKScheduleCo502065" msdata:parent="InvSchedule" msdata:child="ScheduleContext" msdata:parentkey="IDSchedule" msdata:childkey="ScheduleID" msprop:Generator_UserChildTable="ScheduleContext" msprop:Generator_ChildPropName="GetScheduleContextRows" msprop:Generator_UserRelationName="FKScheduleCo502065" msprop:Generator_ParentPropName="InvScheduleRow" msprop:Generator_RelationVarName="relationFKScheduleCo502065" msprop:Generator_UserParentTable="InvSchedule" />
      <msdata:Relationship name="FKStatementC389980" msdata:parent="MoveStatement" msdata:child="StatementContext" msdata:parentkey="IDStatement" msdata:childkey="MoveStatementIDStatement" msprop:Generator_UserChildTable="StatementContext" msprop:Generator_ChildPropName="GetStatementContextRows" msprop:Generator_UserRelationName="FKStatementC389980" msprop:Generator_ParentPropName="MoveStatementRow" msprop:Generator_RelationVarName="relationFKStatementC389980" msprop:Generator_UserParentTable="MoveStatement" />
      <msdata:Relationship name="FKStatementC692918" msdata:parent="Inventory" msdata:child="StatementContext" msdata:parentkey="IDInventory" msdata:childkey="InventoryIDInventory" msprop:Generator_UserChildTable="StatementContext" msprop:Generator_ChildPropName="GetStatementContextRows" msprop:Generator_UserRelationName="FKStatementC692918" msprop:Generator_ParentPropName="InventoryRow" msprop:Generator_RelationVarName="relationFKStatementC692918" msprop:Generator_UserParentTable="Inventory" />
      <msdata:Relationship name="FKSubdivisio731963" msdata:parent="Subdivision" msdata:child="Subdivision" msdata:parentkey="IDSubdivision" msdata:childkey="MainSubdivisionID" msprop:Generator_UserChildTable="Subdivision" msprop:Generator_ChildPropName="GetSubdivisionRows" msprop:Generator_UserRelationName="FKSubdivisio731963" msprop:Generator_RelationVarName="relationFKSubdivisio731963" msprop:Generator_UserParentTable="Subdivision" msprop:Generator_ParentPropName="SubdivisionRowParent" />
      <msdata:Relationship name="FKSubdivisio85726" msdata:parent="Building" msdata:child="Subdivision" msdata:parentkey="IDBuilding" msdata:childkey="BuildingIDBuilding" msprop:Generator_UserChildTable="Subdivision" msprop:Generator_ChildPropName="GetSubdivisionRows" msprop:Generator_UserRelationName="FKSubdivisio85726" msprop:Generator_ParentPropName="BuildingRow" msprop:Generator_RelationVarName="relationFKSubdivisio85726" msprop:Generator_UserParentTable="Building" />
      <msdata:Relationship name="FKWaybillCon138646" msdata:parent="Waybill" msdata:child="WaybillContext" msdata:parentkey="IDWaybill" msdata:childkey="WaybillIDWaybill" msprop:Generator_UserChildTable="WaybillContext" msprop:Generator_ChildPropName="GetWaybillContextRows" msprop:Generator_UserRelationName="FKWaybillCon138646" msprop:Generator_ParentPropName="WaybillRow" msprop:Generator_RelationVarName="relationFKWaybillCon138646" msprop:Generator_UserParentTable="Waybill" />
      <msdata:Relationship name="FKWaybillCon602493" msdata:parent="MoveStatement" msdata:child="WaybillContext" msdata:parentkey="IDStatement" msdata:childkey="MoveStatementIDStatement" msprop:Generator_UserChildTable="WaybillContext" msprop:Generator_ChildPropName="GetWaybillContextRows" msprop:Generator_UserRelationName="FKWaybillCon602493" msprop:Generator_ParentPropName="MoveStatementRow" msprop:Generator_RelationVarName="relationFKWaybillCon602493" msprop:Generator_UserParentTable="MoveStatement" />
      <msdata:Relationship name="FKWorker680609" msdata:parent="Subdivision" msdata:child="Worker" msdata:parentkey="IDSubdivision" msdata:childkey="SubdivisionID" msprop:Generator_UserChildTable="Worker" msprop:Generator_ChildPropName="GetWorkerRows" msprop:Generator_UserRelationName="FKWorker680609" msprop:Generator_ParentPropName="SubdivisionRow" msprop:Generator_RelationVarName="relationFKWorker680609" msprop:Generator_UserParentTable="Subdivision" />
      <msdata:Relationship name="FKWriteOffAc163622" msdata:parent="WriteOffReason" msdata:child="WriteOffAct" msdata:parentkey="IDReason" msdata:childkey="WriteOffReasonIDReason" msprop:Generator_UserChildTable="WriteOffAct" msprop:Generator_ChildPropName="GetWriteOffActRows" msprop:Generator_UserRelationName="FKWriteOffAc163622" msprop:Generator_RelationVarName="relationFKWriteOffAc163622" msprop:Generator_UserParentTable="WriteOffReason" msprop:Generator_ParentPropName="WriteOffReasonRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>